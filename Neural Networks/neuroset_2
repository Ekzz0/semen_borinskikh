#%% md
Сумма возведение в квадрат
#%%
import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'

import numpy as np
import matplotlib.pyplot as plt
from tensorflow import keras
from tensorflow.keras.layers import Dense
#%% md
Обучающая выборка
#%%
c = np.array([0, 1, 2, 3, 4, 5, 6,
              1.5, 2.25, 1.03, 0.5,0.1 , 2.1,
             3.5, 4.5, 5.5, 6.5, 7.5, 8.5]) # числа
f = np.array([0, 1, 4, 9, 16, 25, 36,
              2.25, 4.95, 1.0609, 0.25,0.01 ,4.41,
             12.25, 20.25, 30.25, 42.25, 56.25, 72.25]) # квадрат 
#%%
model = keras.Sequential() # создает модель нейронной многослойной сети
# Добавление нейронов
model.add(Dense(units=1, input_shape=(1,), activation='linear'))
model.compile(loss='mean_squared_error', optimizer=keras.optimizers.Adam(0.1))
history = model.fit(c, f, epochs=500, verbose=False) # обучение нейронной сети
print("Обучение завершено")
plt.plot(history.history['loss']) # 2й history - словарь, loss - критерий качества
#, вычисленный для каждой эпохи
plt.grid(True)
plt.show()
#%%
print(model.predict([2])) # ввод в модель каких-то данных, т.е её эксплуатация 
#%%
